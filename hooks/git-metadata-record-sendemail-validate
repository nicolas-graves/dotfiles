#!/usr/bin/env -S awk -f

# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright Â© 2025 Nicolas Graves <ngraves@ngraves.fr>
# This hook will add a `git note` to the last commit of a patch series,
# in recutils format, such as:
# List:
# Message-ID:
# Version:
# Number-Patches:

BEGIN {
    EMAIL_HEADERS = ARGV[2]
    ARGV[2] = ""

    NUMBER_PATCHES = ENVIRON["GIT_SENDEMAIL_FILE_TOTAL"]
    if (ENVIRON["GIT_SENDEMAIL_FILE_COUNTER"] != NUMBER_PATCHES) {
        print "Skipping commit: Not the last patch in the series."
        exit 0
    }

    # Note: Only for lines, but multiline is not needed for those fields.
    while ((getline line < EMAIL_HEADERS) > 0) {
        if (match(line, /^(Message-ID|To|Subject): (.*)/, arr)) {
            if (arr[1] == "Message-ID") {
                MESSAGE_ID = arr[2]
            } else if (arr[1] == "To") {
                MAILING_LIST = arr[2]
            } else if (arr[1] == "Subject") {
                if (match(arr[2], /^Subject: \[PATCH.* v([0-9]+)/, ver)) {
                    VERSION = ver[1]
                } else if (SUBJECT ~ /^Subject: \[PATCH.*/) {
                    VERSION = 1
                } else {
                    VERSION = ""
                }
            }
        }
    }
    close(EMAIL_HEADERS)

    MESSAGE =                                   \
        "List: " MAILING_LIST "\n"              \
        "Message-ID: " MESSAGE_ID "\n"          \
        "Version: " VERSION "\n"                \
        "Number-Patches: " NUMBER_PATCHES
    # print "DEBUG: MESSAGE = " MESSAGE

    print "Adding a git note for the patch series."
    system("git notes add HEAD --force --message \"" MESSAGE "\"")

    exit 0
}
